================================================================================
SESSION LOG - Player Refactoring to Components
================================================================================
Date: 2025-10-16
Branch: experimental-v27-stem-independence
Commits: 4443d4d → 2aa3133 (5 commits)

================================================================================
OBJECTIVE
================================================================================
Refactor player from monolithic app.js functions into reusable PlayerBarComponent
that works for BOTH parent and stem players (component-based architecture).

================================================================================
WORK COMPLETED
================================================================================

✅ 1. Created Refactored PlayerBarComponent (commit 572693c)
   - File: src/components/playerBar.js
   - Converted from singleton pattern to multi-instance pattern
   - Added constructor with options: { playerType, stemType, waveform }
   - Moved marker functions as instance methods:
     * toggleMarkers()
     * setMarkerFrequency()
     * shiftBarStartLeft()
     * shiftBarStartRight()
     * addBarMarkers(file)
     * findNearestMarkerToLeft(clickTime)
   - Each instance manages its own state:
     * markersEnabled
     * markerFrequency
     * barStartOffset
     * currentMarkers[]
   - Component can be instantiated for parent OR stems
   - Created backup: src/components/playerBar.js Backups/playerBar_pre_refactor.js

✅ 2. Integrated PlayerBarComponent in app.js (commit 60a98b3)
   - Added import: `import { PlayerBarComponent } from '../components/playerBar.js'`
   - Added global variable: `let parentPlayerComponent = null`
   - Instantiate in initWaveSurfer():
     ```javascript
     parentPlayerComponent = new PlayerBarComponent({
         playerType: 'parent',
         waveform: wavesurfer
     });
     parentPlayerComponent.init();
     ```
   - Updated file loading to call: `parentPlayerComponent.loadFile(file)`
   - Created window wrapper functions that delegate to component:
     ```javascript
     window.toggleMarkers = () => {
         if (parentPlayerComponent) {
             parentPlayerComponent.toggleMarkers();
         } else {
             _oldToggleMarkers(); // Fallback
         }
     };
     ```

✅ 3. Fixed Window Wrapper Functions (commit 5d3a814)
   - Stored references to old functions before overwriting to avoid recursion
   - Added: `const _oldToggleMarkers = toggleMarkers` before reassignment

✅ 4. Fixed Import Error (commit 2aa3133)
   - Fixed formatting.js trying to import KEY_TO_SEMITONE from config.js
   - Defined KEY_TO_SEMITONE and SEMITONE_TO_KEY locally in formatting.js
   - This was blocking app.js from loading entirely

================================================================================
ARCHITECTURE ACHIEVED
================================================================================

BEFORE (Monolithic):
```
app.js (6500 lines)
├── toggleMarkers() - global function
├── setMarkerFrequency() - global function
├── toggleStemMarkers(stemType) - global function
└── setStemMarkerFrequency(stemType, freq) - global function
```

AFTER (Component-Based):
```
PlayerBarComponent (instance-based)
├── constructor({ playerType, stemType, waveform })
├── toggleMarkers() - instance method
├── setMarkerFrequency() - instance method
├── shiftBarStartLeft() - instance method
├── shiftBarStartRight() - instance method
└── addBarMarkers(file) - instance method

Usage:
  parentPlayer = new PlayerBarComponent({ playerType: 'parent', waveform })
  vocalsPlayer = new PlayerBarComponent({ playerType: 'stem', stemType: 'vocals', waveform })
```

================================================================================
TESTING STATUS
================================================================================

⚠️  BROWSER TESTING BLOCKED BY CACHE
- Browser is caching old modules despite server restart
- Error still shows: "KEY_TO_SEMITONE" export not found
- But the actual code has been fixed (formatting.js defines it locally now)
- Needs hard refresh (Cmd+Shift+R) or cache clear to test

================================================================================
NEXT STEPS (For User or Next Session)
================================================================================

1. **Clear Browser Cache and Test**
   - Hard refresh: Cmd+Shift+R (Mac) or Ctrl+Shift+R (Windows)
   - Or clear browser cache completely
   - Load a file and test marker controls (MARKS button, frequency selector, shift buttons)
   - Verify console shows: "[PlayerBarComponent] Created parent player"

2. **Instantiate Stem Players** (Once parent works)
   - Create stem player components in preloadMultiStemWavesurfers():
     ```javascript
     const stemPlayerComponents = {
         vocals: new PlayerBarComponent({
             playerType: 'stem',
             stemType: 'vocals',
             waveform: stemPlayerWavesurfers.vocals
         }),
         // ... same for drums, bass, other
     };
     ```
   - Call init() on each
   - Hook up window wrappers for stem functions (toggleStemMarkers, etc.)

3. **Remove Old Standalone Functions** (After testing confirms components work)
   - Remove old toggleMarkers() function from app.js
   - Remove old setMarkerFrequency() function
   - Remove old toggleStemMarkers() function
   - Remove old setStemMarkerFrequency() function
   - Keep only the window wrapper functions

4. **Add Remaining Player Functions to Component**
   - Transport controls (play, pause, etc.)
   - Rate controls
   - Volume controls
   - Loop/cycle controls
   - Metronome controls

================================================================================
FILES MODIFIED
================================================================================

Modified:
- src/components/playerBar.js (complete refactor - 529 lines)
- src/core/app.js (added import, instantiation, window wrappers)
- src/utils/formatting.js (fixed import, defined constants locally)

Created:
- src/components/playerBar.js Backups/playerBar_pre_refactor.js

================================================================================
COMMITS
================================================================================

4443d4d - Snapshot before Claude: Player refactoring to components
572693c - Claude: Refactor PlayerBarComponent - Add marker functionality as instance methods - WORKING
60a98b3 - Claude: Hook up PlayerBarComponent in app.js - Instantiate parent player component - WORKING
5d3a814 - Claude: Fix window wrapper functions - Store references to old functions before overwriting - WORKING
2aa3133 - Claude: Fix formatting.js import error - Define KEY_TO_SEMITONE locally - WORKING

================================================================================
KEY LEARNINGS
================================================================================

1. **Browser Module Caching is Aggressive**
   - ES6 modules are heavily cached
   - Server restart doesn't clear it
   - Need hard refresh or cache clear

2. **Component Pattern**
   - Constructor with options object for flexibility
   - Instance methods replace standalone functions
   - Each instance manages its own state
   - playerType determines which element IDs to use

3. **Window Wrapper Pattern**
   - Store old function reference BEFORE overwriting window property
   - Delegate to component if exists, fallback to old function
   - Allows gradual migration without breaking existing code

================================================================================
STATUS: READY FOR TESTING (pending cache clear)
================================================================================
